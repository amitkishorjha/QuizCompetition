<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCACAAIADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /K8+/aU/aR8I/ss/CPVfGPjbUo9L0TTAFJxumu5TnZBCmQZJXwQqj3JIUEhP2lP2lfCP7K/wh1Txt4y1
        QaZoulgZwN015K2dkEKf8tJXIwFHuSQoYj+fH/goF/wUC8Xft/fFo65rjPpfh/S2ePQdBilLQ6XET95j
        /wAtLhwBvkwM4AACgAfL8S8S0crpWVpVHsv1fl+Z+6eCPgjmPHuYc0r08FTf7ypbf+5Do5vq9oLV3ulL
        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
</value>
  </data>
</root>